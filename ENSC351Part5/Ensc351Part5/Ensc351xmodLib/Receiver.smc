9999 4 1
7
BEGIN DATA
BEGIN GenericState 197
197 10
2 28 173 166
1
CompleteReceiverTopLevel
0 12582911 0
176
TEXTBEGIN
if (ctx.useCrc) {ctx.NCGbyte='C'; ctx.tmSoh = TM_SOH_C;}
else {ctx.NCGbyte=NAK; ctx.tmSoh = TM_SOH;}
/*ctx.purge();*/ctx.sendByte(ctx.NCGbyte); ctx.errCnt=0; ctx.KbCan=false;
TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN FinalState 112
112 10
133 129 137 133
1
FinalState
BEGIN Mesg 120
120 20
138 77 169 90
1
1 1 16777215 65280
119
SER
c==CAN
43
TEXTBEGIN
ctx.clearCan();
ctx.result="SndCancelled";
TEXTEND
BEGIN GenericState 141
141 10
36 54 169 105
1
KBcancelable
0 8454143 0
18
TEXTBEGIN
ctx.tm(ctx.tmSoh);
TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN GenericState 142
142 10
56 122 83 133
1
TimeoutTransient
0 65408 0
10
TEXTBEGIN
ctx.tm(0);
TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN Mesg 143
143 20
69 104 100 122
1
1 1 16777215 65280
144
SER
!ctx.KbCan && c==SOH
82
TEXTBEGIN
ctx.getRestBlk();
if (!ctx.goodBlk1st) 
     ctx.errCnt++;
else ctx.errCnt=0;

TEXTEND
BEGIN Mesg 148
148 20
18 107 65 131
1
1 1 16777215 65280
145
TM
!ctx.syncLoss && (ctx.errCnt <= errB)
149
TEXTBEGIN
if (ctx.goodBlk)  ctx.sendByte(ACK);
else  ctx.sendByte(NAK);
ctx.NCGbyte=NAK; ctx.tmSoh=TM_SOH;
if (ctx.goodBlk1st) 
      ctx.writeChunk();


TEXTEND
BEGIN Mesg 151
151 20
53 70 73 81
1
1 1 16777215 65280
147
SER
c==CAN
0
TEXTBEGIN

TEXTEND
BEGIN Mesg 154
154 20
115 85 144 97
1
1 1 16777215 65280
153
KB_C

34
TEXTBEGIN
ctx.KbCan=true;
/* use history */
TEXTEND
BEGIN Mesg 158
158 20
61 90 100 105
1
1 1 16777215 65280
157
SER
!ctx.KbCan && c==EOT
78
TEXTBEGIN
ctx.purge();ctx.sendByte(NAK);
ctx.errCnt++;ctx.tm(TM_SOH);
ctx.NCGbyte=NAK;
TEXTEND
BEGIN Mesg 160
160 20
141 93 165 105
1
1 1 16777215 65280
159
SER
c==EOT
38
TEXTBEGIN
ctx.sendByte(ACK);
ctx.result="Done";
TEXTEND
BEGIN Mesg 164
164 20
4 46 37 74
1
1 1 16777215 65280
163
TM
ctx.errCnt < errB && !ctx.KbCan
152
TEXTBEGIN
if (ctx.NCGbyte=='C' && ctx.errCnt == 3) {
   ctx.NCGbyte=NAK; 
   ctx.tmSoh=TM_SOH;
   ctx.useCrc=false;}
ctx.sendByte(ctx.NCGbyte);
ctx.errCnt++;
TEXTEND
BEGIN Mesg 165
165 20
28 134 89 155
1
1 1 16777215 65280
108
TM
ctx.syncLoss || ctx.errCnt > errB
115
TEXTBEGIN
ctx.can8();
if (ctx.syncLoss)
     ctx.result="LossOfSyncronization";
else
     ctx.result="ExcessiveErrors";

TEXTEND
BEGIN Mesg 167
167 20
120 67 167 82
1
1 1 16777215 65280
166
SER
!ctx.KbCan  && c!=SOH
12
TEXTBEGIN
ctx.purge();
TEXTEND
BEGIN Mesg 169
169 20
135 145 180 169
1
1 1 16777215 65280
168
TM
ctx.errCnt>=errB || ctx.KbCan
103
TEXTBEGIN
ctx.can8();
if (ctx.KbCan)
     ctx.result="KbCancelled";
else
     ctx.result="ExcessiveErrors";

TEXTEND
BEGIN Mesg 185
185 20
97 80 116 87
1
1 1 16777215 65280
184
TM

0
TEXTBEGIN

TEXTEND
BEGIN GenericState 189
189 10
38 66 114 104
1
BETWEEN
0 12582911 0
0
TEXTBEGIN

TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN Transition 184
184 40
135 61 135 69
149 193
2 3 2 1
2 98 80 99 80 
1 99 80 112 80 
0 112 80 112 91 
1 112 91 109 91 
3 109 91 108 91 
BEGIN Transition 192
192 40
55 70 55 78
172 155
2 1 4 1
2 46 98 47 98 
3 47 98 48 98 
BEGIN GenericState 193
193 10
41 87 108 103
1
SERcancelable
0 16777215 0
0
TEXTBEGIN

TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN GenericState 156
156 10
97 92 107 101
1
EOT
0 12582911 0
0
TEXTBEGIN

TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN GenericState 155
155 10
48 92 62 101
1
FirstByte
0 12582911 0
0
TEXTBEGIN

TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN InitialState 172
172 10
42 96 46 100
1
InitialState
BEGIN GenericState 149
149 10
69 70 98 85
1
CAN
0 16777215 0
21
TEXTBEGIN
ctx.tmPush(TM_2CHAR);
TEXTEND
12
TEXTBEGIN
ctx.tmPop();
TEXTEND
BEGIN InitialState 194
194 10
47 76 51 80
1
InitialState
BEGIN InitialState 198
198 10
100 43 104 47
1
InitialState
BEGIN Transition 199
199 40
82 14 82 22
198 141
3 1 1 2
2 102 47 102 48 
0 102 48 102 53 
3 102 53 102 54 
BEGIN Transition 157
157 40
46 66 46 74
155 156
2 2 4 2
2 62 96 63 96 
1 63 96 96 96 
3 96 96 97 96 
BEGIN InitialState 200
200 10
74 59 78 63
1
InitialState
BEGIN Transition 206
206 40
98 29 98 37
205 189
4 2 1 3
2 114 63 113 63 
1 113 63 95 63 
0 95 63 95 65 
3 95 65 95 66 
BEGIN Transition 108
108 40
87 72 87 80
142 112
3 2 3 1
2 69 133 69 134 
0 69 134 69 145 
1 69 145 135 145 
0 135 145 135 134 
3 135 134 135 133 
BEGIN Transition 119
119 40
132 70 132 78
149 112
2 2 2 1
2 98 77 99 77 
1 99 77 171 77 
0 171 77 171 131 
1 171 131 138 131 
3 138 131 137 131 
BEGIN Transition 144
144 40
79 54 79 62
141 142
3 3 1 2
2 69 105 69 106 
0 69 106 69 121 
3 69 121 69 122 
BEGIN Transition 201
201 40
42 29 42 37
200 189
3 1 1 2
2 76 63 76 64 
0 76 64 76 65 
3 76 65 76 66 
BEGIN Transition 195
195 40
51 54 51 62
194 193
3 1 1 1
2 49 80 49 81 
0 49 81 49 83 
1 49 83 58 83 
0 58 83 58 86 
3 58 86 58 87 
BEGIN Transition 159
159 40
68 70 68 78
156 112
2 2 2 1
2 107 96 108 96 
1 108 96 171 96 
0 171 96 171 131 
1 171 131 138 131 
3 138 131 137 131 
BEGIN Transition 208
208 40
100 71 100 79
141 112
3 1 1 1
2 135 105 135 106 
0 135 106 135 128 
3 135 128 135 129 
BEGIN Transition 210
210 40
37 99 37 107
142 112
3 1 3 1
2 75 133 75 134 
0 75 134 75 141 
1 75 141 135 141 
0 135 141 135 134 
3 135 134 135 133 
BEGIN Transition 147
147 40
93 66 93 74
193 149
1 2 4 2
2 74 87 74 86 
1 74 86 63 86 
0 63 86 63 77 
1 63 77 68 77 
3 68 77 69 77 
BEGIN Transition 166
166 40
78 59 78 67
189 205
2 1 2 2
2 114 76 115 76 
1 115 76 147 76 
0 147 76 147 63 
1 147 63 144 63 
3 144 63 143 63 
BEGIN Transition 153
153 40
74 124 74 132
189 189
2 3 2 2
2 114 94 115 94 
1 115 94 135 94 
0 135 94 135 85 
1 135 85 115 85 
3 115 85 114 85 
BEGIN Transition 213
213 40
101 97 101 105
156 112
3 3 4 1
2 100 101 100 102 
0 100 102 100 131 
1 100 131 132 131 
3 132 131 133 131 
BEGIN Transition 217
217 40
83 125 83 133
142 142
2 3 2 2
2 83 129 84 129 
1 84 129 93 129 
0 93 129 93 127 
1 93 127 84 127 
3 84 127 83 127 
BEGIN Transition 168
168 40
32 59 32 67
141 112
4 2 3 1
2 36 79 35 79 
1 35 79 15 79 
0 15 79 15 163 
1 15 163 135 163 
0 135 163 135 134 
3 135 134 135 133 
BEGIN Transition 145
145 40
69 72 69 80
142 141
4 2 4 1
2 56 127 55 127 
1 55 127 18 127 
0 18 127 18 91 
1 18 91 35 91 
3 35 91 36 91 
BEGIN Transition 163
163 40
32 59 32 67
141 202
4 3 4 3
2 36 67 35 67 
1 35 67 31 67 
0 31 67 31 46 
1 31 46 35 46 
3 35 46 36 46 
BEGIN Transition 220
220 40
65 44 65 52
202 141
2 2 1 1
2 65 48 66 48 
1 66 48 69 48 
0 69 48 69 53 
3 69 53 69 54 
BEGIN GenericState 202
202 10
36 43 65 53
1
WorkaroundTransient2
0 8454016 0
16
TEXTBEGIN
POST("*", CONT);
TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN GenericState 205
205 10
114 58 143 68
1
WorkaroundTransient1
0 8454016 0
16
TEXTBEGIN
POST("*", CONT);
TEXTEND
0
TEXTBEGIN

TEXTEND
BEGIN Mesg 207
207 20
95 60 113 66
1
1 1 16777215 65280
206
CONT

0
TEXTBEGIN

TEXTEND
BEGIN Mesg 209
209 20
135 105 176 123
1
1 1 16777215 65280
208
SER
ctx.KbCan
68
TEXTBEGIN
ctx.purge();
ctx.can8();
ctx.result=
    "KbCancelled (delayed)";
TEXTEND
BEGIN Mesg 211
211 20
79 132 125 146
1
1 1 16777215 65280
210
KB_C

50
TEXTBEGIN
ctx.can8();
ctx.result="kbCancelled (immediate)";
TEXTEND
BEGIN Note 212
212 50
6 2 73 27
1
0 0 8454143 128
287
TEXTBEGIN
Copyright 2014 Craig Scratchley (March 25), 
craig_scratchley AT alumni.sfu.ca

Receiver StateChart for XMODEM file-transfer protocol.

Real events are either 
      SER (serial character recieved), 
      KB_C (cancel command received from keyboard)
      TM (timeout occurred) 
TEXTEND
BEGIN Mesg 214
214 20
100 105 134 122
1
1 1 16777215 65280
213
SER
c!=EOT && ctx.errCnt>=errB
54
TEXTBEGIN
ctx.purge(); ctx.can8();
ctx.result="Error from EOT";
TEXTEND
BEGIN Note 215
215 50
81 2 160 27
1
0 0 8454016 128
546
TEXTBEGIN
The WorkaroundTransient states were introduced to work around a 
bug in the current version of the SmartState program.  Without 
these WorkaroundTransient states, the triggering of the 
applicable transitions would not result in the StateChart 
ending up in the FirstByte state.  Instead, the StateChart 
would stay in exactly the same state.  The transition that sets 
ctx.KbCan to true exploits this bug.  Here, we want the 
StateChart to return to exactly the same state after the 
transition that it had been in before the transition.
TEXTEND
BEGIN Mesg 218
218 20
83 121 102 129
1
1 1 16777215 65280
217
SER

12
TEXTBEGIN
ctx.purge();
TEXTEND
BEGIN Note 219
219 50
105 35 177 50
1
0 0 65535 255
223
TEXTBEGIN
Ordinarily...
TM_SOH (normal timeout waiting for SOH) gives 10 seconds
TM_SOH_C (timeout waiting for SOH after 'C') gives 3 seconds
TM_2CHAR gives a period longer than the 
           inter-character timeout of 1 sec.

TEXTEND
BEGIN Mesg 221
221 20
66 44 87 50
1
1 1 16777215 65280
220
CONT

0
TEXTBEGIN

TEXTEND
END DATA
Receiver
ReceiverX
ReceiverX.h

0
INCLUDE BEGIN

INCLUDE END
18
DECL BEGIN
#define c wParam

DECL END
Craig Scratchley, School of Engineering Science, Simon Fraser Unviersity -- wcs@sfu.ca
276
DESC BEGIN
Copyright 2013 Craig Scratchley, 
craig_scratchley AT alumni.sfu.ca

Receiver StateChart for XMODEM file-transfer protocol.

Real events are either 
      SER (serial character recieved), 
      KB_C (cancel command received from keyboard)
      TM (timeout occurred) 
DESC END
0
INCLUDE BEGIN

INCLUDE END
0
DECL BEGIN

DECL END
Context

0
DECL BEGIN

DECL END
Context

0
DECL BEGIN

DECL END
